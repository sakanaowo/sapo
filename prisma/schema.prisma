generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  adminId   BigInt   @id @default(autoincrement())
  username  String   @unique
  password  String
  email     String?  @unique
  firstName String?
  lastName  String?
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([username])
  @@map("admin")
}

model Product {
  productId   BigInt           @id @default(autoincrement())
  name        String
  description String?
  brand       String?
  productType String?
  tags        String?
  createdAt   DateTime         @default(now())
  variants    ProductVariant[]

  @@index([name])
  @@map("product")
}

model ProductVariant {
  variantId            BigInt                @id @default(autoincrement())
  productId            BigInt
  sku                  String                @unique
  barcode              String?
  variantName          String
  weight               Float                 @default(0)
  weightUnit           String                @default("g")
  unit                 String
  imageUrl             String?
  retailPrice          Float                 @default(0)
  wholesalePrice       Float                 @default(0)
  importPrice          Float                 @default(0)
  taxApplied           Boolean               @default(false)
  inputTax             Float                 @default(0)
  outputTax            Float                 @default(0)
  createdAt            DateTime              @default(now())
  inventory            Inventory?
  orderDetails         OrderDetail[]
  product              Product               @relation(fields: [productId], references: [productId], onDelete: Cascade)
  purchaseOrderDetails PurchaseOrderDetail[]
  ReportInventory      ReportInventory[]
  fromConversions      UnitConversion[]      @relation("fromVariant")
  toConversions        UnitConversion[]      @relation("toVariant")
  warranty             Warranty?

  @@index([sku])
  @@index([barcode])
  @@index([productId])
  @@index([variantName])
  @@map("product_variant")
}

model Inventory {
  inventoryId       BigInt         @id @default(autoincrement())
  variantId         BigInt         @unique
  initialStock      Float          @default(0)
  currentStock      Float          @default(0)
  minStock          Float          @default(0)
  maxStock          Float          @default(0)
  warehouseLocation String?
  updatedAt         DateTime       @default(now()) @updatedAt
  variant           ProductVariant @relation(fields: [variantId], references: [variantId], onDelete: Cascade)

  @@index([variantId])
  @@map("inventory")
}

model UnitConversion {
  conversionId   BigInt         @id @default(autoincrement())
  fromVariantId  BigInt
  toVariantId    BigInt
  conversionRate Float
  createdAt      DateTime       @default(now())
  fromVariant    ProductVariant @relation("fromVariant", fields: [fromVariantId], references: [variantId], onDelete: Cascade)
  toVariant      ProductVariant @relation("toVariant", fields: [toVariantId], references: [variantId], onDelete: Cascade)

  @@unique([fromVariantId, toVariantId])
  @@index([fromVariantId])
  @@index([toVariantId])
  @@map("unit_conversion")
}

model Warranty {
  warrantyId            BigInt         @id @default(autoincrement())
  variantId             BigInt         @unique
  expirationWarningDays Int            @default(0)
  warrantyPolicy        String?
  createdAt             DateTime       @default(now())
  variant               ProductVariant @relation(fields: [variantId], references: [variantId], onDelete: Cascade)

  @@index([variantId])
  @@map("warranty")
}

model CustomerGroup {
  customerGroupId BigInt     @id @default(autoincrement())
  groupCode       String     @unique
  name            String
  description     String?
  customerCount   Int        @default(0)
  createdAt       DateTime   @default(now())
  customers       Customer[]

  @@index([groupCode])
  @@map("customer_group")
}

model Customer {
  customerId       BigInt         @id @default(autoincrement())
  customerCode     String         @unique
  name             String
  phone            String?
  email            String?
  address          String?
  customerGroupId  BigInt?
  debt             Float          @default(0)
  totalSpent       Float          @default(0)
  totalOrders      Int            @default(0)
  birthDate        DateTime?
  gender           String?
  taxCode          String?
  description      String?
  lastPurchaseDate DateTime?
  totalItemsBought Float          @default(0)
  createdAt        DateTime       @default(now())
  customerGroup    CustomerGroup? @relation(fields: [customerGroupId], references: [customerGroupId])
  orders           Order[]

  @@index([customerCode])
  @@index([customerGroupId])
  @@map("customer")
}

model Order {
  orderId       BigInt        @id @default(autoincrement())
  orderCode     String        @unique
  customerId    BigInt?
  createdAt     DateTime      @default(now())
  status        String?
  paymentStatus String?
  totalAmount   Float         @default(0)
  note          String?
  customer      Customer?     @relation(fields: [customerId], references: [customerId])
  orderDetails  OrderDetail[]

  @@index([orderCode])
  @@index([customerId])
  @@map("order")
}

model OrderDetail {
  orderDetailId BigInt         @id @default(autoincrement())
  orderId       BigInt
  variantId     BigInt
  quantity      Float
  unitPrice     Float
  discount      Float          @default(0)
  totalAmount   Float
  order         Order          @relation(fields: [orderId], references: [orderId], onDelete: Cascade)
  variant       ProductVariant @relation(fields: [variantId], references: [variantId], onDelete: Cascade)

  @@index([orderId])
  @@index([variantId])
  @@map("order_detail")
}

model Supplier {
  supplierId     BigInt          @id @default(autoincrement())
  supplierCode   String          @unique
  name           String
  email          String?
  phone          String?
  address        String?
  taxCode        String?
  website        String?
  status         String?
  createdAt      DateTime        @default(now())
  purchaseOrders PurchaseOrder[]

  @@index([supplierCode])
  @@map("supplier")
}

model PurchaseOrder {
  purchaseOrderId      BigInt                @id @default(autoincrement())
  purchaseOrderCode    String                @unique
  supplierId           BigInt
  createdBy            BigInt?
  createdAt            DateTime              @default(now())
  importDate           DateTime?
  status               String?
  importStatus         String?
  supplier             Supplier              @relation(fields: [supplierId], references: [supplierId])
  purchaseOrderDetails PurchaseOrderDetail[]

  @@index([purchaseOrderCode])
  @@index([supplierId])
  @@map("purchase_order")
}

model PurchaseOrderDetail {
  purchaseOrderDetailId BigInt         @id @default(autoincrement())
  purchaseOrderId       BigInt
  variantId             BigInt
  quantity              Float
  unitPrice             Float
  discount              Float          @default(0)
  totalAmount           Float
  purchaseOrder         PurchaseOrder  @relation(fields: [purchaseOrderId], references: [purchaseOrderId], onDelete: Cascade)
  variant               ProductVariant @relation(fields: [variantId], references: [variantId], onDelete: Cascade)

  @@index([purchaseOrderId])
  @@index([variantId])
  @@map("purchase_order_detail")
}

model ReportSales {
  reportId     BigInt   @id @default(autoincrement())
  reportDate   DateTime
  periodType   String
  totalRevenue Float    @default(0)
  totalOrders  Int      @default(0)
  createdAt    DateTime @default(now())

  @@index([reportDate, periodType])
  @@map("report_sales")
}

model ReportInventory {
  reportInventoryId BigInt         @id @default(autoincrement())
  variantId         BigInt
  reportDate        DateTime
  unit              String
  productType       String?        @default("Normal")
  sku               String
  currentStock      Float          @default(0)
  inventoryValue    Float          @default(0)
  createdAt         DateTime       @default(now())
  variant           ProductVariant @relation(fields: [variantId], references: [variantId], onDelete: Cascade)

  @@index([reportDate])
  @@index([variantId])
  @@map("report_inventory")
}

model ReportFinance {
  reportFinanceId BigInt   @id @default(autoincrement())
  reportDate      DateTime
  reportType      String
  totalAmount     Float    @default(0)
  details         String?
  createdAt       DateTime @default(now())

  @@index([reportDate, reportType])
  @@map("report_finance")
}
